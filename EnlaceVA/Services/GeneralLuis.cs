// <auto-generated>
// Code generated by luis:generate:cs
// Tool github: https://github.com/microsoft/botframework-cli
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using System;
using System.Collections.Generic;
using Microsoft.Bot.Builder;
using Microsoft.Bot.Builder.AI.Luis;
namespace Luis
{
    public partial class GeneralLuis: IRecognizerConvert
    {
        [JsonProperty("text")]
        public string Text;

        [JsonProperty("alteredText")]
        public string AlteredText;

        public enum Intent {
            Abona_a_tu_factura,
            Adquiere_tu_seguro,
            Cambio_de_nombre,
            Certificado_de_tus_facturas,
            Certificado_deuda_diferida,
            Confirm,
            Constancia_de_pago,
            Consulta_y_generacion_de_factura,
            Consumo_facturado,
            Cupo_de_brilla,
            Deuda_actual_y_diferida,
            Emergencias,
            Estado_de_solicitud_PQRs,
            Estado_reconexion_por_pago,
            Exencion_de_contribucion,
            Fecha_proxima_revision_periodica,
            Identidad_de_funcionario,
            Menu,
            None,
            Reject,
            Salir,
            Solicita_tu_cupon_de_pago_anticipado,
            Solicite_su_revision_periodica,
            Terminacion_de_contrato,
            Traslado_de_deuda_o_desmonte,
            Ultima_lectura,
            Utiliza_tu_cupo,
            Valor_fecha_limite_y_referencia_pago,
            Visita_de_financiacion_no_bancaria
        };
        [JsonProperty("intents")]
        public Dictionary<Intent, IntentScore> Intents;

        public class _Entities
        {
            // Simple entities
            public string[] DirectionalReference;
            public string[] Facturacion;

            // Built-in entities
            public double[] number;
            public double[] ordinal;

            // Lists
            public string[][] FacturaciónYpagos;

            // Pattern.any
            public string[] PersonName_Any;


            // Instance
            public class _Instance
            {
                public InstanceData[] DirectionalReference;
                public InstanceData[] Facturacion;
                public InstanceData[] FacturaciónYpagos;
                public InstanceData[] PersonName_Any;
                public InstanceData[] number;
                public InstanceData[] ordinal;
            }
            [JsonProperty("$instance")]
            public _Instance _instance;
        }
        [JsonProperty("entities")]
        public _Entities Entities;

        [JsonExtensionData(ReadData = true, WriteData = true)]
        public IDictionary<string, object> Properties {get; set; }

        public void Convert(dynamic result)
        {
            var app = JsonConvert.DeserializeObject<GeneralLuis>(
                JsonConvert.SerializeObject(
                    result,
                    new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore, Error = OnError }
                )
            );
            Text = app.Text;
            AlteredText = app.AlteredText;
            Intents = app.Intents;
            Entities = app.Entities;
            Properties = app.Properties;
        }

        private static void OnError(object sender, ErrorEventArgs args)
        {
            // If needed, put your custom error logic here
            Console.WriteLine(args.ErrorContext.Error.Message);
            args.ErrorContext.Handled = true;
        }

        public (Intent intent, double score) TopIntent()
        {
            Intent maxIntent = Intent.None;
            var max = 0.0;
            foreach (var entry in Intents)
            {
                if (entry.Value.Score > max)
                {
                    maxIntent = entry.Key;
                    max = entry.Value.Score.Value;
                }
            }
            return (maxIntent, max);
        }
    }
}
